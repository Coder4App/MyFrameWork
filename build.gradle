// Top-level build file where you can add configuration options common to all sub-projects/modules.
println("根build.gradle 开始配置")
apply from: 'project_config.gradle'
apply plugin: "com.dorongold.task-tree"
apply plugin: "com.cw.plugin.taskTree"
apply plugin: "com.cw.plugin.channelTag"
buildscript {
    ext.kotlin_version = "1.4.32"
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        maven {url 'https://dl.google.com/dl/android/maven2/'}
        maven { url uri('/Users/chenwei/Desktop/localMaven') }
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.0.1"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "gradle.plugin.com.dorongold.plugins:task-tree:1.5"
        classpath "com.cw.gradlePlugin:myPlugin:1.0.49"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()

        //依赖flutter的aar需要添加aar的路径，这里先放在本地，后续可以放在远端的maven中
        maven {
            url '/Users/chenwei/Desktop/githubProject/my_flutter_module/build/host/outputs/repo'
        }
        maven {
            url "https://storage.flutter-io.cn/download.flutter.io"
        }

        maven {
            url 'https://artifact.bytedance.com/repository/pangle'
        }

    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

//flutter开关配置，必须在这个rootProject的ext中添加，这样就可以在别的build.gradle脚本中用 rootProject.ext.flutterLocal 获取配置
Properties properties = new Properties()
File file = new File("flutter_config.properties")
if (file.exists()) {
    properties.load(new FileInputStream(file))
    rootProject.ext.flutterLocal = Boolean.parseBoolean(properties.getProperty("flutter_student_app"))
}
println("根build.gradle 配置完成")